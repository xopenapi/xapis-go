/*
xapi services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xapis

import (
	"encoding/json"
)

// AudioInfo struct for AudioInfo
type AudioInfo struct {
	// 音频时长（秒）
	Duration int32 `json:"duration"`
	// 音频大小（字节）
	Size int32 `json:"size"`
	// 音频格式
	Format *string `json:"format,omitempty"`
}

// NewAudioInfo instantiates a new AudioInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudioInfo(duration int32, size int32) *AudioInfo {
	this := AudioInfo{}
	this.Duration = duration
	this.Size = size
	return &this
}

// NewAudioInfoWithDefaults instantiates a new AudioInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudioInfoWithDefaults() *AudioInfo {
	this := AudioInfo{}
	return &this
}

// GetDuration returns the Duration field value
func (o *AudioInfo) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *AudioInfo) GetDurationOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *AudioInfo) SetDuration(v int32) {
	o.Duration = v
}

// GetSize returns the Size field value
func (o *AudioInfo) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *AudioInfo) GetSizeOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *AudioInfo) SetSize(v int32) {
	o.Size = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *AudioInfo) GetFormat() string {
	if o == nil || isNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AudioInfo) GetFormatOk() (*string, bool) {
	if o == nil || isNil(o.Format) {
    return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *AudioInfo) HasFormat() bool {
	if o != nil && !isNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *AudioInfo) SetFormat(v string) {
	o.Format = &v
}

func (o AudioInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if !isNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}

type NullableAudioInfo struct {
	value *AudioInfo
	isSet bool
}

func (v NullableAudioInfo) Get() *AudioInfo {
	return v.value
}

func (v *NullableAudioInfo) Set(val *AudioInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAudioInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAudioInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudioInfo(val *AudioInfo) *NullableAudioInfo {
	return &NullableAudioInfo{value: val, isSet: true}
}

func (v NullableAudioInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudioInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


