/*
xapi services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xapis

import (
	"encoding/json"
	"time"
)

// ConfigTemplate struct for ConfigTemplate
type ConfigTemplate struct {
	// 配置模板ID
	Id string `json:"id"`
	// 所属的配置组ID
	GroupId *string `json:"group_id,omitempty"`
	// 配置项
	Key string `json:"key"`
	// 配置内容
	Value map[string]interface{} `json:"value"`
	// 创建时间
	CreatedAt time.Time `json:"created_at"`
	// 最后更新时间
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewConfigTemplate instantiates a new ConfigTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigTemplate(id string, key string, value map[string]interface{}, createdAt time.Time) *ConfigTemplate {
	this := ConfigTemplate{}
	this.Id = id
	this.Key = key
	this.Value = value
	this.CreatedAt = createdAt
	return &this
}

// NewConfigTemplateWithDefaults instantiates a new ConfigTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigTemplateWithDefaults() *ConfigTemplate {
	this := ConfigTemplate{}
	return &this
}

// GetId returns the Id field value
func (o *ConfigTemplate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConfigTemplate) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConfigTemplate) SetId(v string) {
	o.Id = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ConfigTemplate) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplate) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
    return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ConfigTemplate) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *ConfigTemplate) SetGroupId(v string) {
	o.GroupId = &v
}

// GetKey returns the Key field value
func (o *ConfigTemplate) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ConfigTemplate) GetKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ConfigTemplate) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *ConfigTemplate) GetValue() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ConfigTemplate) GetValueOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *ConfigTemplate) SetValue(v map[string]interface{}) {
	o.Value = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ConfigTemplate) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ConfigTemplate) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ConfigTemplate) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ConfigTemplate) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigTemplate) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ConfigTemplate) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ConfigTemplate) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ConfigTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableConfigTemplate struct {
	value *ConfigTemplate
	isSet bool
}

func (v NullableConfigTemplate) Get() *ConfigTemplate {
	return v.value
}

func (v *NullableConfigTemplate) Set(val *ConfigTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigTemplate(val *ConfigTemplate) *NullableConfigTemplate {
	return &NullableConfigTemplate{value: val, isSet: true}
}

func (v NullableConfigTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


