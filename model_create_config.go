/*
xapi services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xapis

import (
	"encoding/json"
)

// CreateConfig struct for CreateConfig
type CreateConfig struct {
	// 所属的资源ID
	ResourceId string `json:"resource_id"`
	// 所属的配置组ID
	GroupId *string `json:"group_id,omitempty"`
	// 配置模板ID
	TemplateId *string `json:"template_id,omitempty"`
	// 配置项
	Key string `json:"key"`
	// 配置内容
	Value map[string]interface{} `json:"value"`
}

// NewCreateConfig instantiates a new CreateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConfig(resourceId string, key string, value map[string]interface{}) *CreateConfig {
	this := CreateConfig{}
	this.ResourceId = resourceId
	this.Key = key
	this.Value = value
	return &this
}

// NewCreateConfigWithDefaults instantiates a new CreateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConfigWithDefaults() *CreateConfig {
	this := CreateConfig{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *CreateConfig) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *CreateConfig) GetResourceIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *CreateConfig) SetResourceId(v string) {
	o.ResourceId = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *CreateConfig) GetGroupId() string {
	if o == nil || isNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConfig) GetGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.GroupId) {
    return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *CreateConfig) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *CreateConfig) SetGroupId(v string) {
	o.GroupId = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *CreateConfig) GetTemplateId() string {
	if o == nil || isNil(o.TemplateId) {
		var ret string
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConfig) GetTemplateIdOk() (*string, bool) {
	if o == nil || isNil(o.TemplateId) {
    return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *CreateConfig) HasTemplateId() bool {
	if o != nil && !isNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given string and assigns it to the TemplateId field.
func (o *CreateConfig) SetTemplateId(v string) {
	o.TemplateId = &v
}

// GetKey returns the Key field value
func (o *CreateConfig) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CreateConfig) GetKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CreateConfig) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *CreateConfig) GetValue() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *CreateConfig) GetValueOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.Value, true
}

// SetValue sets field value
func (o *CreateConfig) SetValue(v map[string]interface{}) {
	o.Value = v
}

func (o CreateConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resource_id"] = o.ResourceId
	}
	if !isNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !isNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableCreateConfig struct {
	value *CreateConfig
	isSet bool
}

func (v NullableCreateConfig) Get() *CreateConfig {
	return v.value
}

func (v *NullableCreateConfig) Set(val *CreateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConfig(val *CreateConfig) *NullableCreateConfig {
	return &NullableCreateConfig{value: val, isSet: true}
}

func (v NullableCreateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


