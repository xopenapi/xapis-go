/*
xapi services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xapis

import (
	"encoding/json"
)

// SendSMS struct for SendSMS
type SendSMS struct {
	// 手机号
	Phone string `json:"phone"`
	// 短信内容或模版ID
	Content string `json:"content"`
	// 模版参数
	Params map[string]interface{} `json:"params,omitempty"`
	// 短信签名
	Sign *string `json:"sign,omitempty"`
	Provider *SMSProvider `json:"provider,omitempty"`
}

// NewSendSMS instantiates a new SendSMS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendSMS(phone string, content string) *SendSMS {
	this := SendSMS{}
	this.Phone = phone
	this.Content = content
	return &this
}

// NewSendSMSWithDefaults instantiates a new SendSMS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendSMSWithDefaults() *SendSMS {
	this := SendSMS{}
	return &this
}

// GetPhone returns the Phone field value
func (o *SendSMS) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *SendSMS) GetPhoneOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *SendSMS) SetPhone(v string) {
	o.Phone = v
}

// GetContent returns the Content field value
func (o *SendSMS) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *SendSMS) GetContentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *SendSMS) SetContent(v string) {
	o.Content = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *SendSMS) GetParams() map[string]interface{} {
	if o == nil || isNil(o.Params) {
		var ret map[string]interface{}
		return ret
	}
	return o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSMS) GetParamsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Params) {
    return map[string]interface{}{}, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *SendSMS) HasParams() bool {
	if o != nil && !isNil(o.Params) {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *SendSMS) SetParams(v map[string]interface{}) {
	o.Params = v
}

// GetSign returns the Sign field value if set, zero value otherwise.
func (o *SendSMS) GetSign() string {
	if o == nil || isNil(o.Sign) {
		var ret string
		return ret
	}
	return *o.Sign
}

// GetSignOk returns a tuple with the Sign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSMS) GetSignOk() (*string, bool) {
	if o == nil || isNil(o.Sign) {
    return nil, false
	}
	return o.Sign, true
}

// HasSign returns a boolean if a field has been set.
func (o *SendSMS) HasSign() bool {
	if o != nil && !isNil(o.Sign) {
		return true
	}

	return false
}

// SetSign gets a reference to the given string and assigns it to the Sign field.
func (o *SendSMS) SetSign(v string) {
	o.Sign = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *SendSMS) GetProvider() SMSProvider {
	if o == nil || isNil(o.Provider) {
		var ret SMSProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSMS) GetProviderOk() (*SMSProvider, bool) {
	if o == nil || isNil(o.Provider) {
    return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *SendSMS) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given SMSProvider and assigns it to the Provider field.
func (o *SendSMS) SetProvider(v SMSProvider) {
	o.Provider = &v
}

func (o SendSMS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["phone"] = o.Phone
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if !isNil(o.Params) {
		toSerialize["params"] = o.Params
	}
	if !isNil(o.Sign) {
		toSerialize["sign"] = o.Sign
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableSendSMS struct {
	value *SendSMS
	isSet bool
}

func (v NullableSendSMS) Get() *SendSMS {
	return v.value
}

func (v *NullableSendSMS) Set(val *SendSMS) {
	v.value = val
	v.isSet = true
}

func (v NullableSendSMS) IsSet() bool {
	return v.isSet
}

func (v *NullableSendSMS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendSMS(val *SendSMS) *NullableSendSMS {
	return &NullableSendSMS{value: val, isSet: true}
}

func (v NullableSendSMS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendSMS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


