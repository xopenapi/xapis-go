//go:build go1.18
// +build go1.18

// Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.9.3, generator: @autorest/go@4.0.0-preview.44)
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// DO NOT EDIT.

package xapis

import "time"

// ClientCreateConfigGroupOptions contains the optional parameters for the Client.CreateConfigGroup method.
type ClientCreateConfigGroupOptions struct {
	Body *CreateConfigGroup
}

// ClientCreateConfigOptions contains the optional parameters for the Client.CreateConfig method.
type ClientCreateConfigOptions struct {
	Body *CreateConfig
}

// ClientCreateConfigTemplateOptions contains the optional parameters for the Client.CreateConfigTemplate method.
type ClientCreateConfigTemplateOptions struct {
	Body *CreateConfigTemplate
}

// ClientDeleteConfigGroupOptions contains the optional parameters for the Client.DeleteConfigGroup method.
type ClientDeleteConfigGroupOptions struct {
	// placeholder for future optional parameters
}

// ClientDeleteConfigOptions contains the optional parameters for the Client.DeleteConfig method.
type ClientDeleteConfigOptions struct {
	// placeholder for future optional parameters
}

// ClientDeleteConfigTemplateOptions contains the optional parameters for the Client.DeleteConfigTemplate method.
type ClientDeleteConfigTemplateOptions struct {
	// placeholder for future optional parameters
}

// ClientGetConfigByKeyOptions contains the optional parameters for the Client.GetConfigByKey method.
type ClientGetConfigByKeyOptions struct {
	// placeholder for future optional parameters
}

// ClientGetConfigGroupOptions contains the optional parameters for the Client.GetConfigGroup method.
type ClientGetConfigGroupOptions struct {
	// placeholder for future optional parameters
}

// ClientGetConfigOptions contains the optional parameters for the Client.GetConfig method.
type ClientGetConfigOptions struct {
	// placeholder for future optional parameters
}

// ClientGetConfigTemplateByKeyOptions contains the optional parameters for the Client.GetConfigTemplateByKey method.
type ClientGetConfigTemplateByKeyOptions struct {
	// placeholder for future optional parameters
}

// ClientGetConfigTemplateOptions contains the optional parameters for the Client.GetConfigTemplate method.
type ClientGetConfigTemplateOptions struct {
	// placeholder for future optional parameters
}

// ClientGetStorageTemporaryCredentialsOptions contains the optional parameters for the Client.GetStorageTemporaryCredentials
// method.
type ClientGetStorageTemporaryCredentialsOptions struct {
	// 上传路径，可以为空
	Path *string
	// 指定使用的云储存平台，可选值有：qcloud（腾讯云）、aliyun（阿里云）。如果未指定，使用默认平台。
	Provider *StorageProvider
}

// ClientUpdateConfigGroupOptions contains the optional parameters for the Client.UpdateConfigGroup method.
type ClientUpdateConfigGroupOptions struct {
	// placeholder for future optional parameters
}

// ClientUpdateConfigOptions contains the optional parameters for the Client.UpdateConfig method.
type ClientUpdateConfigOptions struct {
	// placeholder for future optional parameters
}

// ClientUpdateConfigTemplateOptions contains the optional parameters for the Client.UpdateConfigTemplate method.
type ClientUpdateConfigTemplateOptions struct {
	// placeholder for future optional parameters
}

type Config struct {
	// REQUIRED; 创建时间
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// REQUIRED; 配置ID
	ID *string `json:"id,omitempty"`

	// REQUIRED; 配置项
	Key *string `json:"key,omitempty"`

	// REQUIRED; 所属的资源ID
	ResourceID *string `json:"resource_id,omitempty"`

	// REQUIRED; 配置内容
	Value interface{} `json:"value,omitempty"`

	// 所属的配置组ID
	GroupID *string `json:"group_id,omitempty"`

	// 配置模板ID
	TemplateID *string `json:"template_id,omitempty"`

	// 最后更新时间
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type ConfigGroup struct {
	// REQUIRED; 创建时间
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// REQUIRED; 配置组ID
	ID *string `json:"id,omitempty"`

	// REQUIRED; 配置组名称
	Name *string `json:"name,omitempty"`

	// 最后更新时间
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type ConfigTemplate struct {
	// REQUIRED; 创建时间
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// REQUIRED; 配置模板ID
	ID *string `json:"id,omitempty"`

	// REQUIRED; 配置项
	Key *string `json:"key,omitempty"`

	// REQUIRED; 配置内容
	Value interface{} `json:"value,omitempty"`

	// 所属的配置组ID
	GroupID *string `json:"group_id,omitempty"`

	// 最后更新时间
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type CreateConfig struct {
	// REQUIRED; 配置项
	Key *string `json:"key,omitempty"`

	// REQUIRED; 所属的资源ID
	ResourceID *string `json:"resource_id,omitempty"`

	// REQUIRED; 配置内容
	Value interface{} `json:"value,omitempty"`

	// 所属的配置组ID
	GroupID *string `json:"group_id,omitempty"`

	// 配置模板ID
	TemplateID *string `json:"template_id,omitempty"`
}

type CreateConfigGroup struct {
	// REQUIRED; 配置组名称
	Name *string `json:"name,omitempty"`
}

type CreateConfigTemplate struct {
	// REQUIRED; 配置项
	Key *string `json:"key,omitempty"`

	// REQUIRED; 配置内容
	Value interface{} `json:"value,omitempty"`

	// 所属的配置组ID
	GroupID *string `json:"group_id,omitempty"`
}

type Error struct {
	// REQUIRED; 错误码
	Code *string `json:"code,omitempty"`

	// 错误消息
	Message *string `json:"message,omitempty"`

	// 发生错误的字段
	Param *string `json:"param,omitempty"`
}

type StorageTemporaryCredentials struct {
	// REQUIRED; 存储桶
	Bucket *string `json:"bucket,omitempty"`

	// REQUIRED; 存储平台的临时上传凭证参数
	Credentials interface{} `json:"credentials,omitempty"`

	// REQUIRED; 使用的云存储平台
	Provider *StorageProvider `json:"provider,omitempty"`

	// REQUIRED; 地区
	Region *string `json:"region,omitempty"`

	// 存储对应的CDN地址
	Cdn *string `json:"cdn,omitempty"`

	// 上传路径对应的CDN地址
	URL *string `json:"url,omitempty"`
}

type UpdateConfig struct {
	// 所属的配置组ID
	GroupID *string `json:"group_id,omitempty"`

	// 配置项
	Key *string `json:"key,omitempty"`

	// 所属的资源ID
	ResourceID *string `json:"resource_id,omitempty"`

	// 配置模板ID
	TemplateID *string `json:"template_id,omitempty"`

	// 配置内容
	Value interface{} `json:"value,omitempty"`
}

type UpdateConfigGroup struct {
	// 配置组名称
	Name *string `json:"name,omitempty"`
}

type UpdateConfigTemplate struct {
	// 所属的配置组ID
	GroupID *string `json:"group_id,omitempty"`

	// 配置项
	Key *string `json:"key,omitempty"`

	// 配置内容
	Value interface{} `json:"value,omitempty"`
}

